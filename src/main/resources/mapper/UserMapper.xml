<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kitri.web_project.mybatis.mappers.UserMapper">


    <insert id="signup" parameterType="string">
        INSERT INTO user (email, nick_name, password, address, img_Path)
        VALUES (#{email}, #{name}, #{password}, #{address}, #{imgPath})
    </insert>

    <select id="findMember" parameterType="string" resultType="com.kitri.web_project.dto.login.ResponseUser">
        SELECT nick_name as nickName, email
        FROM user
        WHERE nick_name = #{name}
          OR email = #{email}
    </select>

    <sql id="requestColumns">
        email, password
    </sql>

    <sql id="responseColumns">
        id, email, password, nick_name, address, img_path
    </sql>

    <resultMap id="userResultMap" type="com.kitri.web_project.dto.login.ResponseClient">
        <id property="id" column="id" />
        <result property="email" column="email" />
        <result property="name" column="nick_name" />
        <result property="password" column="password" />
        <result property="address" column="address" />
        <result property="imgPath" column="img_path" />
    </resultMap>

    <select id="findByEmail" resultMap="userResultMap" parameterType="String">
        SELECT * FROM user where email=#{email};
    </select>

    <select id="findById" resultType="com.kitri.web_project.dto.UserInfo" parameterType="long">
        SELECT (SELECT count(*) FROM free_board WHERE user_id = #{id}) AS boardCount, (select count(*) from free_board_comment where user_id = #{id}) as commentCount,
        (select count(*) from pet_diary where user_id = #{id}) as diaryCount,
        nick_name as name, email, img_path as imgPath, address
        FROM  user where id=#{id};
    </select>


    <sql id="responsePet">
        id, species, age, weight, disease, name, gender, spec_species as specSpecies, recog_chip as recogChip, img_path as img
    </sql>

    <select id="getPets" resultType="com.kitri.web_project.dto.PetInfo" parameterType="long">
        SELECT <include refid="responsePet" /> FROM pet where user_id = #{id}
    </select>

    <select id="getDiary" resultType="com.kitri.web_project.dto.DiaryInfo" parameterType="long">
        SELECT pet_diary.id as id, title, created_at as createdAt, content, pet.id as petId, pet.name as petName
        FROM pet_diary, pet where pet_id = pet.id and pet_diary.user_id = #{id}
        order by created_at desc;
    </select>

    <insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="com.kitri.web_project.dto.diary.RequestDiary">
        INSERT INTO pet_diary (title, content, user_id, pet_id, mood, weather, created_at)
        VALUES (#{title}, #{content}, #{userId}, #{petId}, #{mood}, #{weather}, #{createdAt})
    </insert>

    <select id="petDiary" resultType="com.kitri.web_project.dto.diary.RequestDiary" parameterType="long">
        SELECT pet.name, pet_diary.title, pet_diary.content, pet_diary.created_at, pet_diary.mood, pet_diary.weather,
               pet_id as petId, pet_diary.user_id as userId
        FROM pet_diary
        JOIN pet ON pet_diary.pet_id = pet.id
        WHERE pet_diary.id = #{id};
    </select>

    <delete id="deleteDiary" parameterType="long">
        DELETE FROM pet_diary where id = #{diaryId};
    </delete>

    <select id="petCalendar" resultType="com.kitri.web_project.dto.diary.PetCalendar" parameterType="long">
        SELECT created_at as createdAt, content, pet.name as name
        FROM pet_diary, pet
        where pet_id = pet.id and pet_diary.user_id = #{id}
    </select>

    <update id="editDiary" parameterType="com.kitri.web_project.dto.diary.RequestDiary">
        UPDATE pet_diary
        SET content = #{content},
            title = #{title},
            mood = #{mood},
            weather = #{weather},
            created_at = #{createdAt}
        WHERE id = #{id}
    </update>

    <select id="UpdateDiary" resultType="com.kitri.web_project.dto.diary.RequestDiary" parameterType="long">
        SELECT pet.name, pet_diary.title, pet_diary.content, pet_diary.mood, pet_diary.weather, pet_diary.created_at
        FROM pet_diary
        INNER JOIN pet ON pet_diary.pet_id = pet.id
        WHERE pet_diary.id = #{diaryId};
    </select>

    <insert id="imageSave" parameterType="com.kitri.web_project.dto.diary.DiaryDto">
        insert into diary_img (img_path, diary_id, pet_id, user_id)
        values ( #{imgPath}, #{id}, #{petId}, #{userId})
    </insert>

    <select id="getDiaryImages" parameterType="long" resultType="com.kitri.web_project.dto.diary.DiaryImgDto">
        select img_path as imgPath , id as imgId from diary_img where diary_id = #{id}
    </select>

    <delete id="deleteImageById" parameterType="Long">
        DELETE FROM diary_img where id = #{id};
    </delete>

    <select id="diaryMainImages" parameterType="long" resultType="com.kitri.web_project.dto.diary.DiaryMainImg">
        SELECT pet.name as petName, pet_diary.title, pet_diary.content, pet_diary.created_at, pet_id as petId, pet_diary.user_id as userId, pet_diary.id as diaryId,
               (SELECT img_path FROM diary_img WHERE diary_id = pet_diary.id LIMIT 1) as imgPath
        FROM pet_diary
                 JOIN pet ON pet_diary.pet_id = pet.id
        WHERE pet_diary.user_id = #{id};
    </select>


    <update id="updateUser" parameterType="com.kitri.web_project.dto.UserUpdateInfo">
        UPDATE user
        SET email = #{email}, nick_name = #{name}, img_path = #{imgPath}, address = #{address}
        WHERE id = #{userId}
    </update>

    <select id="getUserImages" parameterType="long" resultType="string">
        select img_path from user
        where id = #{id}
    </select>

    <delete id="deleteUser" parameterType="long">
        DELETE FROM user where id = #{id};
    </delete>

</mapper>

